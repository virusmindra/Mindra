# handlers.py

from telegram import Update
from telegram.ext import CommandHandler, MessageHandler, ContextTypes, filters
from config import TELEGRAM_BOT_TOKEN, client
from history import load_history, save_history, trim_history

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏
conversation_history = load_history()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç, —è Mindra üíú –ü–æ–¥–¥–µ—Ä–∂–∫–∞, –º–æ—Ç–∏–≤–∞—Ü–∏—è –∏ –Ω–µ–º–Ω–æ–≥–æ –ø—Å–∏—Ö–æ–ª–æ–≥. –ì–æ—Ç–æ–≤ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å!")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reset
async def reset(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = str(update.effective_user.id)
    if user_id in conversation_history:
        del conversation_history[user_id]
        save_history(conversation_history)
    await update.message.reply_text("–ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞. –ù–∞—á–Ω—ë–º —Å–Ω–∞—á–∞–ª–∞ ‚ú®")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n\n"
        "üí¨ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî —è –æ—Ç–≤–µ—á—É.\n"
        "üß† –Ø –∑–∞–ø–æ–º–∏–Ω–∞—é —Ç–≤–æ–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–ø–ª–∏–∫–∏ (–∏—Å—Ç–æ—Ä–∏—é –º–æ–∂–Ω–æ —Å–±—Ä–æ—Å–∏—Ç—å).\n"
        "üìé –ö–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
        "/reset ‚Äî —Å–±—Ä–æ—Å –∏—Å—Ç–æ—Ä–∏–∏\n"
        "/help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/about ‚Äî –∫—Ç–æ —Ç–∞–∫–∞—è Mindra\n"
        "/mode [—Ä–µ–∂–∏–º] ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è (default, support, motivation, philosophy, humor)\n"
        "\n–°–∫–æ—Ä–æ –Ω–∞—É—á—É—Å—å –∏ –¥—Ä—É–≥–∏–º —Ñ–∏—à–∫–∞–º üòâ"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about
async def about(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "üíú *–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî Mindra.*\n\n"
        "–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –±—ã—Ç—å —Ä—è–¥–æ–º, –∫–æ–≥–¥–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤—ã–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è, –Ω–∞–π—Ç–∏ –º–æ—Ç–∏–≤–∞—Ü–∏—é –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n"
        "–ú–æ–∂–µ–º –ø–æ–æ–±—â–∞—Ç—å—Å—è —Ç–µ–ø–ª–æ, –ø–æ-–¥–æ–±—Ä–æ–º—É, —Å –∑–∞–±–æ—Ç–æ–π ‚Äî –±–µ–∑ –æ—Å—É–∂–¥–µ–Ω–∏—è –∏ –¥–∞–≤–ª–µ–Ω–∏—è ü¶ã\n\n"
        "üîÆ *–ß—Ç–æ —è —É–º–µ—é:*\n"
        "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å, –∫–æ–≥–¥–∞ —Ç—è–∂–µ–ª–æ\n"
        "‚Ä¢ –ù–∞–ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ —Ç—ã ‚Äî –Ω–µ –æ–¥–∏–Ω(–∞)\n"
        "‚Ä¢ –ü–æ–º–æ—á—å –Ω–∞–π—Ç–∏ —Ñ–æ–∫—É—Å –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ\n"
        "‚Ä¢ –ò –∏–Ω–æ–≥–¥–∞ –ø—Ä–æ—Å—Ç–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –ø–æ –¥—É—à–∞–º üòä\n\n"
        "_–Ø –Ω–µ —Å—Ç–∞–≤–ª—é –¥–∏–∞–≥–Ω–æ–∑—ã –∏ –Ω–µ –∑–∞–º–µ–Ω—è—é –ø—Å–∏—Ö–æ–ª–æ–≥–∞, –Ω–æ —Å—Ç–∞—Ä–∞—é—Å—å –±—ã—Ç—å —Ä—è–¥–æ–º –≤ –Ω—É–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç._\n\n"
        "‚ú® *Mindra ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è —Ç–µ–±—è.*"
    )
    await update.message.reply_markdown(text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /mode
async def mode(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = str(update.effective_user.id)
    args = context.args

    available_modes = {
        "default": "–¢—ã ‚Äî —Ç—ë–ø–ª—ã–π, –∑–∞–±–æ—Ç–ª–∏–≤—ã–π –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π AI-–∫–æ–º–ø–∞–Ω—å–æ–Ω –ø–æ –∏–º–µ–Ω–∏ Mindra.",
        "support": "–¢—ã ‚Äî –∑–∞–±–æ—Ç–ª–∏–≤—ã–π –∏ –ø–æ–Ω–∏–º–∞—é—â–∏–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫, –∫–∞–∫ –ø—Å–∏—Ö–æ–ª–æ–≥. –°–ª—É—à–∞–µ—à—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—à—å –º—è–≥–∫–æ –∏ —Å —ç–º–ø–∞—Ç–∏–µ–π.",
        "motivation": "–¢—ã ‚Äî —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π –∫–æ—É—á, –∫–æ—Ç–æ—Ä—ã–π –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç, –∑–∞—Ä—è–∂–∞–µ—Ç –∏ –ø–æ–º–æ–≥–∞–µ—Ç –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø–µ—Ä—ë–¥.",
        "philosophy": "–¢—ã ‚Äî —Ñ–∏–ª–æ—Å–æ—Ñ, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ –≤–µ—â–∏ –≥–ª—É–±–∂–µ, –∑–∞–¥–∞—ë—Ç –≤–æ–ø—Ä–æ—Å—ã –∏ –¥–µ–ª–∏—Ç—Å—è –º—É–¥—Ä—ã–º–∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è–º–∏.",
        "humor": "–¢—ã ‚Äî –≤–µ—Å—ë–ª—ã–π, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ —Å –ª—ë–≥–∫–∏–º —á—É–≤—Å—Ç–≤–æ–º —é–º–æ—Ä–∞. –ú–æ–∂–µ—à—å –ø–æ—à—É—Ç–∏—Ç—å, –ø–æ–¥–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, –Ω–æ –æ—Å—Ç–∞—ë—à—å—Å—è –¥–æ–±—Ä—ã–º."
    }

    if not args:
        await update.message.reply_text("–£–∫–∞–∂–∏ —Ä–µ–∂–∏–º –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã. –ù–∞–ø—Ä–∏–º–µ—Ä: /mode support\n–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∂–∏–º—ã: default, support, motivation, philosophy, humor")
        return

    selected_mode = args[0].lower()
    if selected_mode not in available_modes:
        await update.message.reply_text("–¢–∞–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞ –Ω–µ—Ç. –ò—Å–ø–æ–ª—å–∑—É–π: default, support, motivation, philosophy, humor")
        return

    conversation_history[user_id] = [
        {"role": "system", "content": (
            available_modes[selected_mode] +
            " –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–π –Ω–∞ —Ç–æ–º –∂–µ —è–∑—ã–∫–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –ø–∏—à–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å. –û—Ç–≤–µ—á–∞–π —Ç–µ–ø–ª–æ, —á–µ–ª–æ–≤–µ—á–Ω–æ –∏ —Å –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º."
        )}
    ]
    save_history(conversation_history)
    await update.message.reply_text(f"–†–µ–∂–∏–º –æ–±—â–µ–Ω–∏—è –ø–µ—Ä–µ–∫–ª—é—á—ë–Ω –Ω–∞ *{selected_mode}* ‚ú®", parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def chat(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text
    user_id = str(update.effective_user.id)

    if user_id not in conversation_history:
        conversation_history[user_id] = [
            {"role": "system", "content": (
                "–¢—ã ‚Äî —Ç—ë–ø–ª—ã–π, –∑–∞–±–æ—Ç–ª–∏–≤—ã–π –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π AI-–∫–æ–º–ø–∞–Ω—å–æ–Ω –ø–æ –∏–º–µ–Ω–∏ Mindra."
                " –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–π –Ω–∞ —Ç–æ–º –∂–µ —è–∑—ã–∫–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –ø–∏—à–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å. –û—Ç–≤–µ—á–∞–π —Ç–µ–ø–ª–æ, —á–µ–ª–æ–≤–µ—á–Ω–æ –∏ —Å –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º."
            )}
        ]

    conversation_history[user_id].append({"role": "user", "content": user_input})
    trimmed_history = trim_history(conversation_history[user_id])

    try:
        response = client.chat.completions.create(
            model="gpt-4o",
            messages=trimmed_history
        )
        reply = response.choices[0].message.content
        conversation_history[user_id].append({"role": "assistant", "content": reply})
        save_history(conversation_history)
        await update.message.reply_text(reply)
    except Exception as e:
        await update.message.reply_text("–£–ø—Å, —è –Ω–µ–º–Ω–æ–≥–æ –∑–∞–≤–∏—Å... –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ ü•∫")
        print(f"‚ùå –û—à–∏–±–∫–∞ OpenAI: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_voice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü–æ–∫–∞ –Ω–µ —É–º–µ—é —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞—Ç—å –≥–æ–ª–æ—Å. –ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç–æ–º üí¨")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
async def unknown_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚ùì –Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. –ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å, —á—Ç–æ —è —É–º–µ—é.")

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
handlers = [
    CommandHandler("start", start),
    CommandHandler("reset", reset),
    CommandHandler("help", help_command),
    CommandHandler("about", about),
    CommandHandler("mode", mode),
    MessageHandler(filters.TEXT & ~filters.COMMAND, chat),
    MessageHandler(filters.VOICE, handle_voice),
    MessageHandler(filters.COMMAND, unknown_command),
]
